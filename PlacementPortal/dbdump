PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2017-11-02 07:21:21.272049');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2017-11-02 07:21:21.303735');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2017-11-02 07:21:21.331646');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2017-11-02 07:21:21.359834');
INSERT INTO django_migrations VALUES(5,'contenttypes','0002_remove_content_type_name','2017-11-02 07:21:21.398450');
INSERT INTO django_migrations VALUES(6,'auth','0002_alter_permission_name_max_length','2017-11-02 07:21:21.423452');
INSERT INTO django_migrations VALUES(7,'auth','0003_alter_user_email_max_length','2017-11-02 07:21:21.452597');
INSERT INTO django_migrations VALUES(8,'auth','0004_alter_user_username_opts','2017-11-02 07:21:21.479802');
INSERT INTO django_migrations VALUES(9,'auth','0005_alter_user_last_login_null','2017-11-02 07:21:21.508538');
INSERT INTO django_migrations VALUES(10,'auth','0006_require_contenttypes_0002','2017-11-02 07:21:21.516890');
INSERT INTO django_migrations VALUES(11,'auth','0007_alter_validators_add_error_messages','2017-11-02 07:21:21.556401');
INSERT INTO django_migrations VALUES(12,'auth','0008_alter_user_username_max_length','2017-11-02 07:21:21.583700');
INSERT INTO django_migrations VALUES(13,'sessions','0001_initial','2017-11-02 07:21:21.605346');
INSERT INTO django_migrations VALUES(14,'company','0001_initial','2017-11-04 11:01:24.719480');
INSERT INTO django_migrations VALUES(15,'student','0001_initial','2017-11-04 11:01:24.868540');
INSERT INTO django_migrations VALUES(16,'ic','0001_initial','2017-11-04 11:01:24.907955');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"));
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id"));
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"));
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "action_time" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'auth','user');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'company','company');
INSERT INTO django_content_type VALUES(8,'company','category');
INSERT INTO django_content_type VALUES(9,'company','jaf');
INSERT INTO django_content_type VALUES(10,'ic','ic');
INSERT INTO django_content_type VALUES(11,'student','department');
INSERT INTO django_content_type VALUES(12,'student','application');
INSERT INTO django_content_type VALUES(13,'student','student');
INSERT INTO django_content_type VALUES(14,'student','program');
INSERT INTO django_content_type VALUES(15,'student','resume');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(5,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(6,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(7,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(8,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(9,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(10,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(11,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(12,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(13,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(14,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(15,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(16,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(17,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(18,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(19,7,'add_company','Can add company');
INSERT INTO auth_permission VALUES(20,7,'change_company','Can change company');
INSERT INTO auth_permission VALUES(21,7,'delete_company','Can delete company');
INSERT INTO auth_permission VALUES(22,8,'add_category','Can add category');
INSERT INTO auth_permission VALUES(23,8,'change_category','Can change category');
INSERT INTO auth_permission VALUES(24,8,'delete_category','Can delete category');
INSERT INTO auth_permission VALUES(25,9,'add_jaf','Can add jaf');
INSERT INTO auth_permission VALUES(26,9,'change_jaf','Can change jaf');
INSERT INTO auth_permission VALUES(27,9,'delete_jaf','Can delete jaf');
INSERT INTO auth_permission VALUES(28,10,'add_ic','Can add ic');
INSERT INTO auth_permission VALUES(29,10,'change_ic','Can change ic');
INSERT INTO auth_permission VALUES(30,10,'delete_ic','Can delete ic');
INSERT INTO auth_permission VALUES(31,11,'add_department','Can add department');
INSERT INTO auth_permission VALUES(32,11,'change_department','Can change department');
INSERT INTO auth_permission VALUES(33,11,'delete_department','Can delete department');
INSERT INTO auth_permission VALUES(34,12,'add_application','Can add application');
INSERT INTO auth_permission VALUES(35,12,'change_application','Can change application');
INSERT INTO auth_permission VALUES(36,12,'delete_application','Can delete application');
INSERT INTO auth_permission VALUES(37,13,'add_student','Can add student');
INSERT INTO auth_permission VALUES(38,13,'change_student','Can change student');
INSERT INTO auth_permission VALUES(39,13,'delete_student','Can delete student');
INSERT INTO auth_permission VALUES(40,14,'add_program','Can add program');
INSERT INTO auth_permission VALUES(41,14,'change_program','Can change program');
INSERT INTO auth_permission VALUES(42,14,'delete_program','Can delete program');
INSERT INTO auth_permission VALUES(43,15,'add_resume','Can add resume');
INSERT INTO auth_permission VALUES(44,15,'change_resume','Can change resume');
INSERT INTO auth_permission VALUES(45,15,'delete_resume','Can delete resume');
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "company_category" ("type" varchar(30) NOT NULL PRIMARY KEY);
CREATE TABLE IF NOT EXISTS "company_company" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "phone_number" varchar(15) NOT NULL, "category_id" varchar(30) NOT NULL REFERENCES "company_category" ("type"), "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id"));
CREATE TABLE IF NOT EXISTS "company_jaf" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "description" text NOT NULL, "other_details" text NULL, "requirements" text NOT NULL, "job_year" integer NOT NULL, "posting" varchar(50) NOT NULL, "profile" varchar(50) NOT NULL, "accomodation" text NOT NULL, "duration" integer NOT NULL, "resume_number" integer NULL, "company_id" integer NOT NULL REFERENCES "company_company" ("id"));
CREATE TABLE IF NOT EXISTS "student_department" ("name" varchar(30) NOT NULL PRIMARY KEY);
CREATE TABLE IF NOT EXISTS "student_program" ("name" varchar(50) NOT NULL PRIMARY KEY);
CREATE TABLE IF NOT EXISTS "student_student" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "email" varchar(254) NOT NULL, "phone_number" varchar(15) NOT NULL, "reg_year" integer NOT NULL, "cpi" real NOT NULL, "department_id" varchar(30) NOT NULL REFERENCES "student_department" ("name"), "program_id" varchar(50) NOT NULL REFERENCES "student_program" ("name"), "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id"));
CREATE TABLE IF NOT EXISTS "student_resume" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "resume_number" integer NOT NULL, "student_id" integer NOT NULL REFERENCES "student_student" ("id"));
CREATE TABLE IF NOT EXISTS "student_application" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "review" text NULL, "is_selected" bool NOT NULL, "progress" integer NOT NULL, "jaf_id" integer NOT NULL REFERENCES "company_jaf" ("id"), "student_id" integer NOT NULL REFERENCES "student_student" ("id"));
CREATE TABLE IF NOT EXISTS "ic_ic" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "student_id" integer NOT NULL REFERENCES "student_student" ("id"), "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id"));
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',16);
INSERT INTO sqlite_sequence VALUES('django_admin_log',0);
INSERT INTO sqlite_sequence VALUES('django_content_type',15);
INSERT INTO sqlite_sequence VALUES('auth_permission',45);
INSERT INTO sqlite_sequence VALUES('auth_user',0);
INSERT INTO sqlite_sequence VALUES('student_resume',0);
INSERT INTO sqlite_sequence VALUES('student_application',0);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "company_company_category_id_1eed524d" ON "company_company" ("category_id");
CREATE INDEX "company_jaf_company_id_b49bb1eb" ON "company_jaf" ("company_id");
CREATE INDEX "student_student_department_id_f520f9f6" ON "student_student" ("department_id");
CREATE INDEX "student_student_program_id_59b67025" ON "student_student" ("program_id");
CREATE INDEX "student_resume_student_id_62bbe502" ON "student_resume" ("student_id");
CREATE INDEX "student_application_jaf_id_bd782677" ON "student_application" ("jaf_id");
CREATE INDEX "student_application_student_id_93e05b71" ON "student_application" ("student_id");
CREATE UNIQUE INDEX "student_application_student_id_jaf_id_59e07e01_uniq" ON "student_application" ("student_id", "jaf_id");
CREATE INDEX "ic_ic_student_id_8c87c8fb" ON "ic_ic" ("student_id");
COMMIT;
